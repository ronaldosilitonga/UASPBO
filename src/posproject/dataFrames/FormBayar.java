/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package posproject.dataFrames;

import java.util.Random;
import javax.swing.JOptionPane;
import posproject.dataSupport.NewData;
import posproject.dataSupport.ThrownData;
import posproject.dataSupport.StatusPembayaran;
import posproject.dataSupport.StringGenerator;
import posproject.transactionPart.DetailTransaksi;
import posproject.transactionPart.Transaksi;
import posproject.dataPayments.Cash;
import posproject.dataPayments.Debit;
import posproject.dataPayments.QRIS;
import posproject.newData.Pulsa;
import posproject.newData.Token;
import posproject.dbConnection.DBConnector;

                                                                       
/**
 *
 * @author NALDO
 */
public class FormBayar extends javax.swing.JFrame {

    private String totalBelanja;
    private DetailTransaksi detailTransaksi = new DetailTransaksi();
    private Transaksi transaksi = new Transaksi();
    private NewData newdata = new NewData();
    private ThrownData thrown = new ThrownData();
    StatusPembayaran statuspembayaran = new StatusPembayaran();

    private int id_transaksi;
    /**
     * Creates new form FormBayar
     */
    public FormBayar() {
        initComponents();
        bankOption(false);
        scanQRButton.setVisible(false);
    }
    
    public void setTransaksi(Transaksi newTransaksi){
        transaksi = newTransaksi;
    }
    
    public Transaksi getTransaksi(){
        return transaksi;
    }
    
    public void setDetailTransaksi(DetailTransaksi newDetailTransaksi){
        detailTransaksi = newDetailTransaksi;
    }
    
    public DetailTransaksi getDetailTransaksi(){
        return detailTransaksi;
    }
    
    private void bankOption(boolean visibility){
        bankNameLabel.setVisible(visibility);
        bankNameComboBox.setVisible(visibility);
        bankCardLabel.setVisible(visibility);
        bankCardTextField.setVisible(visibility);
    }
    
    private String addComma(float _input){
        return String.format("%,.0f", _input);
    }
    
    private float removeComma(String _input){
        String stringInput = _input.replace(",", "");
        return Float.parseFloat(stringInput);
    }
    
    public void getTotalBelanja(String _totalBelanja){
        totalBelanja = _totalBelanja;
        totalHargaTextField.setText(totalBelanja);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        totalHargaTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jumlahDibayarTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        kembalianTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        metodePembayaranComboBox = new javax.swing.JComboBox<>();
        bankNameLabel = new javax.swing.JLabel();
        bankNameComboBox = new javax.swing.JComboBox<>();
        bankCardLabel = new javax.swing.JLabel();
        bankCardTextField = new javax.swing.JTextField();
        bayarButton = new javax.swing.JButton();
        scanQRButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Pembayaran");

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel1.setText("Menu Pembayaran");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Total Harga");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Jumlah yang Dibayar");

        jumlahDibayarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahDibayarTextFieldActionPerformed(evt);
            }
        });
        jumlahDibayarTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jumlahDibayarTextFieldKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Kembalian");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Metode Pembayaran");

        metodePembayaranComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Kartu Debit", "QRIS" }));
        metodePembayaranComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                metodePembayaranComboBoxItemStateChanged(evt);
            }
        });
        metodePembayaranComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodePembayaranComboBoxActionPerformed(evt);
            }
        });

        bankNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bankNameLabel.setText("Opsi Bank");

        bankNameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih Bank -", "BRI", "BNI", "BCA" }));

        bankCardLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bankCardLabel.setText("Nomor Kartu");

        bayarButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bayarButton.setText("Bayar");
        bayarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarButtonActionPerformed(evt);
            }
        });

        scanQRButton.setText("Scan QR");
        scanQRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanQRButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(180, 180, 180))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bayarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bankCardLabel)
                        .addGap(132, 132, 132)
                        .addComponent(bankCardTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(bankNameLabel))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kembalianTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                            .addComponent(jumlahDibayarTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                            .addComponent(totalHargaTextField)
                            .addComponent(metodePembayaranComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bankNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(scanQRButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalHargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jumlahDibayarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(metodePembayaranComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scanQRButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankNameLabel)
                    .addComponent(bankNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankCardLabel)
                    .addComponent(bankCardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(bayarButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(kembalianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bayarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarButtonActionPerformed
        // TODO add your handling code here:
        

        boolean paymentStatus = false;
        float totalHarga = removeComma(totalHargaTextField.getText());
        float totalBayar = removeComma(jumlahDibayarTextField.getText());
        float kembalian = totalBayar - totalHarga;
        
        if(kembalian < 0){          
            JOptionPane.showMessageDialog(null, "Jumlah yang dibayarkan tidak cukup");
            jumlahDibayarTextField.setText("");
            return;
        }
        
        String currentItem = metodePembayaranComboBox.getSelectedItem().toString();

        if(currentItem.equals("Cash")){
            
            paymentStatus = pembayaranCash(totalHarga, totalBayar, kembalian, currentItem);
            checkPaymentStatus(paymentStatus);

        } else if(currentItem.equals("Kartu Debit")){
            
            String cardNumber = bankCardTextField.getText();
            
            if(cardNumber.length() != 16){
                JOptionPane.showMessageDialog(null, "Nomor Kartu tidak Valid [Ketentuan 16 Digit]"); 
                return;
                
            }
            
            paymentStatus = pembayaranDebit(totalHarga, totalBayar, kembalian, currentItem);
            
            checkPaymentStatus(paymentStatus);
            
        } else if(currentItem.equals("QRIS")){
            
            paymentStatus = pembayaranQRIS(totalHarga, totalBayar, kembalian, currentItem);
            
            checkPaymentStatus(paymentStatus);

        }
                                                
        for(int i = 0; i < detailTransaksi.detailIdBarang.size(); i++ ){
            
                if(detailTransaksi.detailIdBarang.get(i) > 50 && detailTransaksi.detailIdBarang.get(i) < 71 ){
                    
                    int id = detailTransaksi.detailIdBarang.get(i);
                    float harga =  detailTransaksi.detailHargaBarang.get(i);
                    String noTelp = thrown.getNoTelpThrown();
                    String operator = thrown.getOperatorPulsaThrown();
                    String nominal = thrown.getNominalPulsaThrown();

                    System.out.println(id_transaksi);
                    Pulsa pulsa = new Pulsa();
                    pulsa.setId_barang(id);
                    pulsa.setHarga(harga);
                    pulsa.setNominal(nominal);
                    pulsa.setOperator(operator);
                    pulsa.setNoTelp(noTelp);
                    pulsa.setId_transaksi(id_transaksi);
                    pulsa.insertPulsa(pulsa);
                                                                
                } else if(detailTransaksi.detailIdBarang.get(i) > 70 && detailTransaksi.detailIdBarang.get(i) < 78 ){
                    
                    int id = detailTransaksi.detailIdBarang.get(i);
                    float harga =  detailTransaksi.detailHargaBarang.get(i);
                    float nominal = harga - (harga * 11/100);

                    String meteran = newdata.getNomorMeteran();

                    Random random = new Random();
                    StringBuilder addKodeToken = new StringBuilder();

                    for (int j = 0; j < 20; j++) {
                        int randomNumber = random.nextInt(10);
                        addKodeToken.append(randomNumber);
                    }
                    String kode_token = addKodeToken.toString();

                    System.out.println(id_transaksi);
                    Token token = new Token();
                    token.setId_barang(id);
                    token.setHarga(harga);
                    token.setNominal(nominal);
                    token.setKodeToken(kode_token);
                    token.setNoMeteran(meteran);
                    token.setId_transaksi(id_transaksi);
                    token.insertToken(token);
                }
            }
    }//GEN-LAST:event_bayarButtonActionPerformed

    private void metodePembayaranComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodePembayaranComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metodePembayaranComboBoxActionPerformed

    private void metodePembayaranComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_metodePembayaranComboBoxItemStateChanged

//        Fungsi untuk menampilkan inputan yang berbebeda saat user mengganti metode pembayaran 
//        sehingga inputan pembayaran disesuaikan dengan yang dipilih oleh user
        
        String currentItem = metodePembayaranComboBox.getSelectedItem().toString();
        
        switch (currentItem) {
            case "Cash":
                scanQRButton.setVisible(false);
                bankOption(false);
                jumlahDibayarTextField.setText("");
                break;
            case "Kartu Debit":
                {
                    scanQRButton.setVisible(false);
                    bankOption(true);
                    String totalHarga = totalHargaTextField.getText();
                    jumlahDibayarTextField.setText(totalHarga);
                    break;
                }
            case "QRIS":
                {
                    scanQRButton.setVisible(true);
                    bankOption(false);
                    String totalHarga = totalHargaTextField.getText();
                    jumlahDibayarTextField.setText(totalHarga);
                    break;
                }
            default:
                break;
        }
    }//GEN-LAST:event_metodePembayaranComboBoxItemStateChanged

    private void scanQRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanQRButtonActionPerformed

//        Fungsi untuk menampilkan kode QR dan melakukan pembayaran melalui kode QR

        FormQRIS formqr = new FormQRIS(); 
        
        formqr.setVisible(true);
    }//GEN-LAST:event_scanQRButtonActionPerformed

    private void jumlahDibayarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahDibayarTextFieldActionPerformed
        // TODO add your handling code here:
        
        String dibayarString = jumlahDibayarTextField.getText();
        dibayarString = dibayarString.replace(",", "");
    }//GEN-LAST:event_jumlahDibayarTextFieldActionPerformed

    private void jumlahDibayarTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jumlahDibayarTextFieldKeyReleased
        // TODO add your handling code here:
        
        String dibayarString = jumlahDibayarTextField.getText();
        dibayarString = dibayarString.replace(",", "");
        
        int dibayarInput = Integer.valueOf(dibayarString);
        jumlahDibayarTextField.setText(String.format("%,d", dibayarInput));
    }//GEN-LAST:event_jumlahDibayarTextFieldKeyReleased

    private void checkPaymentStatus(boolean status){
        if(status){
            JOptionPane.showMessageDialog(null, "Pembayaran Berhasil !");
            statuspembayaran.setStatusBayar(status);

        } else {
            JOptionPane.showMessageDialog(null, "Pembayaran Gagal !");
        }
    }
     
    private boolean pembayaranCash(float _totalHarga,float _totalBayar, float _kembalian, String _paymentMethod){
        
        Cash bayarCash = new Cash();
            
            bayarCash.setIDPembayaran(bayarCash.generateRandomTransactionID());
            id_transaksi = bayarCash.getIDPembayaran();
            bayarCash.setTotalHarga(_totalHarga);
            bayarCash.setTotalBayar(_totalBayar);
            bayarCash.setKembalian(_kembalian);
            bayarCash.setPaymentMethod(_paymentMethod);
            
            
            bayarCash.simpanData(
                    
                    bayarCash.getIDPembayaran(), 
                    bayarCash.getTotalHarga(), 
                    bayarCash.getTotalBayar(), 
                    bayarCash.getKembalian(),
                    bayarCash.getPaymentMethod()
            );
            
            detailTransaksi.setDetailIdTransaksi(bayarCash.getIDPembayaran());
            
            detailTransaksi.simpanDetailTransaksi();
            
            showKembalian(_kembalian);
            
            return true;
    }
    
    private boolean pembayaranDebit(float _totalHarga,float _totalBayar, float _kembalian, String _paymentMethod) {
        
        Debit bayarDebit = new Debit();
            bayarDebit.setIDPembayaran(bayarDebit.generateRandomTransactionID());
            id_transaksi = bayarDebit.getIDPembayaran();
            bayarDebit.setTotalHarga(_totalHarga);
            bayarDebit.setTotalBayar(_totalBayar);
            bayarDebit.setKembalian(_kembalian);
            bayarDebit.setPaymentMethod(_paymentMethod);
            
            
            bayarDebit.simpanData(
                    
                    bayarDebit.getIDPembayaran(), 
                    bayarDebit.getTotalHarga(), 
                    bayarDebit.getTotalBayar(), 
                    bayarDebit.getKembalian(),
                    bayarDebit.getPaymentMethod()
            );
            
            detailTransaksi.setDetailIdTransaksi(bayarDebit.getIDPembayaran());
            
            detailTransaksi.simpanDetailTransaksi();
            
            showKembalian(_kembalian);
            
            return true; 
                  
    }
    
    private boolean pembayaranQRIS(float _totalHarga,float _totalBayar, float _kembalian, String _paymentMethod) {
        
        QRIS bayarQRIS = new QRIS();
            
            StringGenerator stringGenerator = new StringGenerator();
            
            String randomGeneratedContent = stringGenerator.generateRandomString(242);
            
            bayarQRIS.setIDPembayaran(bayarQRIS.generateRandomTransactionID());
            
            id_transaksi = bayarQRIS.getIDPembayaran();
            
            bayarQRIS.setTotalHarga(_totalHarga);
            bayarQRIS.setTotalBayar(_totalBayar);
            bayarQRIS.setKembalian(_kembalian);
            bayarQRIS.setPaymentMethod(_paymentMethod);
            bayarQRIS.setContent(randomGeneratedContent);
            
            
            bayarQRIS.simpanData(
                    
                    bayarQRIS.getIDPembayaran(), 
                    bayarQRIS.getTotalHarga(), 
                    bayarQRIS.getTotalBayar(), 
                    bayarQRIS.getKembalian(),
                    bayarQRIS.getPaymentMethod()
            );
            
            bayarQRIS.insertQRISDetails();
             
            
            detailTransaksi.setDetailIdTransaksi(bayarQRIS.getIDPembayaran());
            
            detailTransaksi.simpanDetailTransaksi();
            
            showKembalian(_kembalian);
            
            return true;
    }
    
    private void showKembalian(float input){
        
        kembalianTextField.setText(addComma(input));
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBayar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBayar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBayar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBayar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBayar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bankCardLabel;
    private javax.swing.JTextField bankCardTextField;
    private javax.swing.JComboBox<String> bankNameComboBox;
    private javax.swing.JLabel bankNameLabel;
    private javax.swing.JButton bayarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jumlahDibayarTextField;
    private javax.swing.JTextField kembalianTextField;
    private javax.swing.JComboBox<String> metodePembayaranComboBox;
    private javax.swing.JButton scanQRButton;
    private javax.swing.JTextField totalHargaTextField;
    // End of variables declaration//GEN-END:variables
}
